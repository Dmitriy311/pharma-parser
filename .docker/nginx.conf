user nginx;

worker_processes auto;
pcre_jit on;
include /etc/nginx/modules/*.conf;
include /etc/nginx/conf.d/*.conf;

error_log /dev/stderr debug;

events {
worker_connections 1024;
}

http {

    include       mime.types;
    include /etc/nginx/conf.d/*.conf;
    default_type  application/octet-stream;

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout;
    error_log /dev/stderr;

    keepalive_timeout  65;

    sendfile on;
    tcp_nopush on;

    #gzip on;
    gzip_vary on;

    map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
    }

    server {
        listen 81 default_server;
        root /app/public/;
        index index.php;
        server_name localhost;

        add_header Content-Security-Policy-Report-Only "
            default-src 'self';
            script-src 'self';
            object-src 'none';
            report-uri /csp-report;
        " always;

        location /csp-report {
            # Use a dedicated location to handle CSP reports.
            # Typically, you'd want to log these or store them appropriately.
            # You might want to forward these to a logging service or a script.
            # For example, a simple logging mechanism:
            access_log /var/log/nginx/csp_report.log;
            return 204;  # No Content response
        }

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
#             try_files $uri $uri/ =404;
        }

        location ~ \.php$ {
            include fastcgi.conf;
            include fastcgi_params;
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            fastcgi_index index.php;
            #fastcgi_pass unix:/run/php/php8.3-fpm.sock;
            fastcgi_pass 127.0.0.1:9000;
        }
    }
}